model Address {
  name = "addresses"

  id             int       @primary @sequence @unique
  building       string?   
  country        string?   
  county         string?   
  district       string?   
  floor          string?   
  language       string?   
  locality       string?   
  location       Location  
  neighborhood   string?   
  postal_code    string?   
  region         string?   
  street         string?   
  street_number  string?   
  street_prefix  string?   
  street_suffix  string?   
  suite          string?   
}

model Affiliation {
  name = "affiliations"

  id                      int                     @primary @sequence @unique
  affiliation_key         string                  
  affiliation_phases      AffiliationPhase[]      
  affiliation_phases      AffiliationPhase[]?     
  affiliations_documents  AffiliationsDocument[]  
  affiliations_events     AffiliationsEvent[]     
  affiliations_media      AffiliationsMedia[]     
  affiliation_type        string?                 
  positions               Position[]              
  publisher               Publisher               
  seasons                 Season[]                
  standings               Standing[]              
  standing_subgroups      StandingSubgroup[]      
  team_phases             TeamPhase[]             
}

model AffiliationPhase {
  name = "affiliation_phases"

  id                    int           @primary @sequence @unique
  affiliation           Affiliation   
  ancestor_affiliation  Affiliation?  
  end_date_time         datetime?     
  end_season            Season?       
  start_date_time       datetime?     
  start_season          Season?       
}

model AffiliationsDocument {
  name = "affiliations_documents"

  affiliation  Affiliation()  
  document     Document()     
}

model AffiliationsEvent {
  name = "affiliations_events"

  affiliation  Affiliation()  
  event        Event()        
}

model AffiliationsMedia {
  name = "affiliations_media"

  affiliation  Affiliation()  
  media        Media()        
}

model AmericanFootballActionParticipant {
  name = "american_football_action_participants"

  id                             int                         @primary @sequence @unique
  american_football_action_play  AmericanFootballActionPlay  
  field_line                     int?                        
  participant_role               string                      
  person                         Person                      
  score_credit                   int?                        
  score_type                     string?                     
  yardage                        int?                        
  yards_gained                   int?                        
}

model AmericanFootballActionPlay {
  name = "american_football_action_plays"

  id                                     int                                  @primary @sequence @unique
  american_football_action_participants  AmericanFootballActionParticipant[]  
  american_football_event_state          AmericanFootballEventState           
  comment                                string?                              
  drive_result                           string?                              
  play_type                              string?                              
  points                                 int?                                 
  score_attempt_type                     string?                              
}

model AmericanFootballDefensiveStat {
  name = "american_football_defensive_stats"

  id                       int      @primary @sequence @unique
  interceptions_average    string?  
  interceptions_longest    string?  
  interceptions_total      string?  
  interceptions_touchdown  string?  
  interceptions_yards      string?  
  passes_defensed          string?  
  quarterback_hurries      string?  
  sacks_total              string?  
  sacks_yards              string?  
  tackles_assists          string?  
  tackles_solo             string?  
  tackles_total            string?  
}

model AmericanFootballDownProgressStat {
  name = "american_football_down_progress_stats"

  id                                  int      @primary @sequence @unique
  conversions_fourth_down             string?  
  conversions_fourth_down_attempts    string?  
  conversions_fourth_down_percentage  string?  
  conversions_third_down              string?  
  conversions_third_down_attempts     string?  
  conversions_third_down_percentage   string?  
  first_downs_pass                    string?  
  first_downs_penalty                 string?  
  first_downs_run                     string?  
  first_downs_total                   string?  
}

model AmericanFootballEventState {
  name = "american_football_event_states"

  id                              int                           @primary @sequence @unique
  american_football_action_plays  AmericanFootballActionPlay[]  
  clock_state                     string?                       
  context                         string?                       
  current_state                   int?                          
  distance_for1st_down            int?                          
  down                            int?                          
  event                           Event                         
  field_line                      int?                          
  field_side                      string?                       
  period_time_elapsed             string?                       
  period_time_remaining           string?                       
  period_value                    int?                          
  sequence_number                 int?                          
  team_in_possession              Team?                         
}

model AmericanFootballFumblesStat {
  name = "american_football_fumbles_stats"

  id                             int      @primary @sequence @unique
  fumbles_committed              string?  
  fumbles_forced                 string?  
  fumbles_lost                   string?  
  fumbles_opposing_committed     string?  
  fumbles_opposing_lost          string?  
  fumbles_opposing_recovered     string?  
  fumbles_opposing_yards_gained  string?  
  fumbles_own_committed          string?  
  fumbles_own_lost               string?  
  fumbles_own_recovered          string?  
  fumbles_own_yards_gained       string?  
  fumbles_recovered              string?  
  fumbles_yards_gained           string?  
}

model AmericanFootballOffensiveStat {
  name = "american_football_offensive_stats"

  id                                 int      @primary @sequence @unique
  offensive_plays_average_yards_per  string?  
  offensive_plays_number             string?  
  offensive_plays_yards              string?  
  possession_duration                string?  
  turnovers_giveaway                 string?  
}

model AmericanFootballPassingStat {
  name = "american_football_passing_stats"

  id                               int      @primary @sequence @unique
  passer_rating                    string?  
  passes_attempts                  string?  
  passes_average_yards_per         string?  
  passes_completions               string?  
  passes_interceptions             string?  
  passes_interceptions_percentage  string?  
  passes_longest                   string?  
  passes_percentage                string?  
  passes_touchdowns                string?  
  passes_touchdowns_percentage     string?  
  passes_yards_gross               string?  
  passes_yards_lost                string?  
  passes_yards_net                 string?  
  receptions_average_yards_per     string?  
  receptions_first_down            string?  
  receptions_longest               string?  
  receptions_total                 string?  
  receptions_touchdowns            string?  
  receptions_yards                 string?  
}

model AmericanFootballPenaltiesStat {
  name = "american_football_penalties_stats"

  id                   int      @primary @sequence @unique
  penalties_total      string?  
  penalty_first_downs  string?  
  penalty_yards        string?  
}

model AmericanFootballRushingStat {
  name = "american_football_rushing_stats"

  id                         int      @primary @sequence @unique
  rushes_attempts            string?  
  rushes_first_down          string?  
  rushes_longest             string?  
  rushes_touchdowns          string?  
  rushes_yards               string?  
  rushing_average_yards_per  string?  
}

model AmericanFootballSacksAgainstStat {
  name = "american_football_sacks_against_stats"

  id                   int      @primary @sequence @unique
  sacks_against_total  string?  
  sacks_against_yards  string?  
}

model AmericanFootballScoringStat {
  name = "american_football_scoring_stats"

  id                              int      @primary @sequence @unique
  extra_points_attempts           string?  
  extra_points_blocked            string?  
  extra_points_made               string?  
  extra_points_missed             string?  
  field_goal_attempts             string?  
  field_goals_blocked             string?  
  field_goals_made                string?  
  field_goals_missed              string?  
  safeties_against                string?  
  touchbacks_total                string?  
  touchdowns_defensive            string?  
  touchdowns_passing              string?  
  touchdowns_rushing              string?  
  touchdowns_special_teams        string?  
  touchdowns_total                string?  
  two_point_conversions_attempts  string?  
  two_point_conversions_made      string?  
}

model AmericanFootballSpecialTeamsStat {
  name = "american_football_special_teams_stats"

  id                                   int      @primary @sequence @unique
  fair_catches                         string?  
  punts_average                        string?  
  punts_blocked                        string?  
  punts_inside20                       string?  
  punts_inside20_percentage            string?  
  punts_longest                        string?  
  punts_total                          string?  
  punts_yards_gross                    string?  
  punts_yards_net                      string?  
  returns_kickoff_average              string?  
  returns_kickoff_longest              string?  
  returns_kickoff_total                string?  
  returns_kickoff_touchdown            string?  
  returns_kickoff_yards                string?  
  returns_punt_average                 string?  
  returns_punt_longest                 string?  
  returns_punt_total                   string?  
  returns_punt_touchdown               string?  
  returns_punt_yards                   string?  
  returns_total                        string?  
  returns_yards                        string?  
  touchbacks_interceptions             string?  
  touchbacks_interceptions_percentage  string?  
  touchbacks_kickoffs                  string?  
  touchbacks_kickoffs_percentage       string?  
  touchbacks_punts                     string?  
  touchbacks_punts_percentage          string?  
  touchbacks_total                     string?  
  touchbacks_total_percentage          string?  
}

model BaseballActionContactDetail {
  name = "baseball_action_contact_details"

  id                      int                  @primary @sequence @unique
  baseball_action_pitch   BaseballActionPitch  
  comment                 string?              
  location                string?              
  strength                string?              
  trajectory_coordinates  string?              
  trajectory_formula      string?              
  velocity                int?                 
}

model BaseballActionPitch {
  name = "baseball_action_pitches"

  id                               int                            @primary @sequence @unique
  ball_type                        string?                        
  baseball_action_contact_details  BaseballActionContactDetail[]  
  baseball_action_play             BaseballActionPlay             
  baseball_defensive_group         BaseballDefensiveGroup?        
  comment                          string?                        
  pitch_location                   string?                        
  pitch_type                       string?                        
  pitch_velocity                   int?                           
  sequence_number                  int?                           
  strike_type                      string?                        
  trajectory_coordinates           string?                        
  trajectory_formula               string?                        
  umpire_call                      string?                        
}

model BaseballActionPlay {
  name = "baseball_action_plays"

  id                           int                    @primary @sequence @unique
  baseball_action_pitches      BaseballActionPitch[]  
  baseball_defensive_group_id  int?                   
  baseball_event_state         BaseballEventState     
  comment                      string?                
  earned_runs_scored           string?                
  notation                     string?                
  notation_yaml                string?                
  outs_recorded                int?                   
  play_type                    string?                
  rbi                          int?                   
  runner_on_first_advance      int?                   
  runner_on_second_advance     int?                   
  runner_on_third_advance      int?                   
  runs_scored                  int?                   
}

model BaseballActionSubstitution {
  name = "baseball_action_substitutions"

  id                            int                 @primary @sequence @unique
  baseball_event_state          BaseballEventState  
  comment                       string?             
  person_original               Person?             
  person_original_lineup_slot   int?                
  person_original_position      Position?           
  person_replacing              Person?             
  person_replacing_lineup_slot  int?                
  person_replacing_position     Position?           
  person_type                   string?             
  sequence_number               int?                
  substitution_reason           string?             
}

model BaseballDefensiveGroup {
  name = "baseball_defensive_group"

  id                          int                        @primary @sequence @unique
  baseball_action_pitches     BaseballActionPitch[]?     
  baseball_defensive_players  BaseballDefensivePlayer[]  
}

model BaseballDefensivePlayer {
  name = "baseball_defensive_players"

  id                        int                     @primary @sequence @unique
  baseball_defensive_group  BaseballDefensiveGroup  
  player                    Person                  
  position                  Position                
}

model BaseballDefensiveStat {
  name = "baseball_defensive_stats"

  id                            int     @primary @sequence @unique
  assists                       int?    
  defensive_average             float?  
  double_plays                  int?    
  errors                        int?    
  errors_catchers_interference  int?    
  errors_passed_ball            int?    
  fielding_percentage           float?  
  putouts                       int?    
  triple_plays                  int?    
}

model BaseballEventState {
  name = "baseball_event_states"

  id                             int                           @primary @sequence @unique
  at_bat_number                  int?                          
  balls                          int?                          
  baseball_action_plays          BaseballActionPlay[]          
  baseball_action_substitutions  BaseballActionSubstitution[]  
  batter                         Person?                       
  batter_side                    string?                       
  context                        string?                       
  current_state                  int?                          
  event                          Event                         
  inning_half                    string?                       
  inning_value                   int?                          
  outs                           int?                          
  pitcher                        Person?                       
  runner_on_first_id             Person?                       
  runner_on_second_id            Person?                       
  runner_on_third_id             Person?                       
  runner_on_first                int?                          
  runner_on_second               int?                          
  runner_on_third                int?                          
  runs_this_inning_half          int?                          
  sequence_number                int?                          
  strikes                        int?                          
}

model BaseballOffensiveStat {
  name = "baseball_offensive_stats"

  id                              int     @primary @sequence @unique
  at_bats                         int?    
  at_bats_per_home_run            float?  
  at_bats_per_rbi                 float?  
  average                         float?  
  bases_on_balls                  int?    
  defensive_interferance_reaches  int?    
  doubles                         int?    
  grand_slams                     int?    
  grounded_into_double_play       int?    
  hit_by_pitch                    int?    
  hits                            int?    
  hits_extra_base                 int?    
  home_runs                       int?    
  left_in_scoring_position        int?    
  left_on_base                    int?    
  moved_up                        int?    
  on_base_percentage              float?  
  on_base_plus_slugging           float?  
  plate_appearances               int?    
  plate_appearances_per_home_run  float?  
  plate_appearances_per_rbi       float?  
  rbi                             int?    
  runs_scored                     int?    
  sac_bunts                       int?    
  sac_flies                       int?    
  singles                         int?    
  slugging_percentage             float?  
  stolen_bases                    int?    
  stolen_bases_average            float?  
  stolen_bases_caught             int?    
  strikeouts                      int?    
  total_bases                     int?    
  triples                         int?    
}

model BaseballPitchingStat {
  name = "baseball_pitching_stats"

  id                          int      @primary @sequence @unique
  balks                       int?     
  bases_on_balls              int?     
  bases_on_balls_intentional  int?     
  doubles_allowed             int?     
  earned_runs                 int?     
  era                         float?   
  errors_hit_with_pitch       int?     
  errors_wild_pitch           int?     
  event_credit                string?  
  games_complete              int?     
  games_finished              int?     
  hits                        int?     
  home_runs_allowed           int?     
  inherited_runners_scored    int?     
  innings_pitched             string?  
  losses                      int?     
  number_of_pitches           int?     
  pick_offs                   int?     
  runs_allowed                int?     
  save_credit                 string?  
  saves                       int?     
  shutouts                    int?     
  singles_allowed             int?     
  strikeouts                  int?     
  strikeout_to_bb_ratio       float?   
  triples_allowed             int?     
  unearned_runs               int?     
  winning_percentage          float?   
  wins                        int?     
}

model BasketballDefensiveStat {
  name = "basketball_defensive_stats"

  id               int      @primary @sequence @unique
  blocks_per_game  string?  
  blocks_total     string?  
  steals_per_game  string?  
  steals_total     string?  
}

model BasketballEventState {
  name = "basketball_event_states"

  id                     int      @primary @sequence @unique
  context                string?  
  current_state          int?     
  event                  Event    
  period_time_elapsed    string?  
  period_time_remaining  string?  
  period_value           string?  
  sequence_number        int?     
}

model BasketballOffensiveStat {
  name = "basketball_offensive_stats"

  id                                 int      @primary @sequence @unique
  assists_per_game                   string?  
  assists_total                      string?  
  field_goals_attempted              int?     
  field_goals_attempted_per_game     string?  
  field_goals_made                   int?     
  field_goals_percentage             string?  
  field_goals_percentage_adjusted    string?  
  field_goals_per_game               string?  
  free_throws_attempted              string?  
  free_throws_attempted_per_game     string?  
  free_throws_made                   string?  
  free_throws_percentage             string?  
  free_throws_per_game               string?  
  points_scored_in_paint             string?  
  points_scored_off_turnovers        string?  
  points_scored_on_fast_break        string?  
  points_scored_on_second_chance     string?  
  points_scored_per_game             string?  
  points_scored_total                string?  
  three_pointers_attempted           int?     
  three_pointers_attempted_per_game  string?  
  three_pointers_made                int?     
  three_pointers_percentage          string?  
  three_pointers_per_game            string?  
  turnovers_per_game                 string?  
  turnovers_total                    string?  
}

model BasketballReboundingStat {
  name = "basketball_rebounding_stats"

  id                       int      @primary @sequence @unique
  rebounds_defensive       string?  
  rebounds_offensive       string?  
  rebounds_per_game        string?  
  rebounds_total           string?  
  team_rebounds_defensive  string?  
  team_rebounds_offensive  string?  
  team_rebounds_per_game   string?  
  team_rebounds_total      string?  
}

model BasketballTeamStat {
  name = "basketball_team_stats"

  id               int      @primary @sequence @unique
  fouls_total      string?  
  largest_lead     string?  
  timeouts_left    string?  
  turnover_margin  string?  
}

model Bookmaker {
  name = "bookmakers"

  id                              int                           @primary @sequence @unique
  bookmaker_key                   string?                       
  location                        Location?                     
  publisher                       Publisher                     
  wagering_moneylines             WageringMoneyline[]           
  wagering_odds_lines             WageringOddsLine[]            
  wagering_runlines               WageringRunline[]             
  wagering_straight_spread_lines  WageringStraightSpreadLine[]  
  wagering_total_score_lines      WageringTotalScoreLine[]      
}

model CorePersonStat {
  name = "core_person_stats"

  id                         int        @primary @sequence @unique
  events_played              int?       
  events_started             int?       
  position                   Position?  
  time_played_event          string?    
  time_played_event_average  string?    
  time_played_total          string?    
}

model CoreStat {
  name = "core_stats"

  id                         int      @primary @sequence @unique
  score                      string?  
  score_attempts             string?  
  score_attempts_opposing    string?  
  score_opposing             string?  
  score_percentage           string?  
  score_percentage_opposing  string?  
}

model DbInfo {
  name = "db_info"

  version  string  @default(16)
}

model DisplayName {
  name = "display_names"

  id            int      @primary @sequence @unique
  abbreviation  string?  
  alias         string?  
  entity_id     int      
  entity_type   string   
  first_name    string?  
  full_name     string?  
  language      string   
  last_name     string?  
  middle_name   string?  
  prefix        string?  
  short_name    string?  
  suffix        string?  
}

model Document {
  name = "documents"

  id                        int                      @primary @sequence @unique
  affiliations_documents    AffiliationsDocument[]   
  date_time                 datetime?                
  db_loading_date_time      datetime?                
  doc_id                    string                   
  document_contents         DocumentContent[]        
  document_fixture          DocumentFixture          
  document_fixtures_events  DocumentFixturesEvent[]  
  document_package_entry    DocumentPackageEntry[]   
  documents_media           DocumentsMedia[]         
  events_documents          EventsDocument[]         
  language                  string?                  
  latest_revisions          LatestRevision[]         
  persons_documents         PersonsDocument[]        
  priority                  string?                  
  publisher                 Publisher                
  revision_id               string?                  
  source                    Publisher?               
  stats_coverage            string?                  
  teams_documents           TeamsDocument[]          
  title                     string?                  
}

model DocumentClass {
  name = "document_classes"

  id                 int                @primary @sequence @unique
  document_fixtures  DocumentFixture[]  
  name               string?            
}

model DocumentContent {
  name = "document_contents"

  id        int       @primary @sequence @unique
  abstract  string?   
  document  Document  
  sportsml  string?   
}

model DocumentFixture {
  name = "document_fixtures"

  id                        int                      @primary @sequence @unique
  document_class            DocumentClass            
  document_fixtures_events  DocumentFixturesEvent[]  
  documents                 Document[]               
  fixture_key               string?                  
  name                      string?                  
  publisher                 Publisher                
}

model DocumentFixturesEvent {
  name = "document_fixtures_events"

  id                int              @primary @sequence @unique
  document_fixture  DocumentFixture  
  event             Event            
  last_update       datetime?        
  latest_document   Document         
}

model DocumentPackage {
  name = "document_packages"

  id                      int                     @primary @sequence @unique
  date_time               datetime?               
  document_package_entry  DocumentPackageEntry[]  
  package_key             string?                 
  package_name            string?                 
}

model DocumentPackageEntry {
  name = "document_package_entry"

  id                int              @primary @sequence @unique
  document          Document         
  document_package  DocumentPackage  
  headline          string?          
  rank              string?          
  short_headline    string?          
}

model DocumentsMedia {
  name = "documents_media"

  id             int           @primary @sequence @unique
  document       Document      
  media          Media         
  media_caption  MediaCaption  
}

model Event {
  name = "events"

  id                              int                           @primary @sequence @unique
  affiliations_events             AffiliationsEvent[]           
  american_football_event_states  AmericanFootballEventState[]  
  attendance                      string?                       
  baseball_event_states           BaseballEventState[]          
  basketball_event_states         BasketballEventState[]        
  document_fixtures_events        DocumentFixturesEvent[]       
  duration                        string?                       
  event_key                       string                        
  events_documents                EventsDocument[]              
  events_media                    EventsMedia[]                 
  events_sub_seasons              EventsSubSeason[]             
  event_status                    string?                       
  ice_hockey_event_states         IceHockeyEventState[]         
  last_update                     datetime?                     
  motor_racing_event_states       MotorRacingEventState[]       
  participants_events             ParticipantsEvent[]           
  person_event_metadata           PersonEventMetadatum[]        
  publisher                       Publisher                     
  site                            Site?                         
  site_alignment                  string?                       
  soccer_event_states             SoccerEventState[]            
  start_date_time                 datetime?                     
  tennis_event_states             TennisEventState[]            
  wagering_moneylines             WageringMoneyline[]           
  wagering_odds_lines             WageringOddsLine[]            
  wagering_runlines               WageringRunline[]             
  wagering_straight_spread_lines  WageringStraightSpreadLine[]  
  wagering_total_score_lines      WageringTotalScoreLine[]      
  weather_conditions              WeatherCondition[]            
}

model EventsDocument {
  name = "events_documents"

  document  Document()  
  event     Event()     
}

model EventsMedia {
  name = "events_media"

  event  Event()  
  media  Media()  
}

model EventsSubSeason {
  name = "events_sub_seasons"

  event       Event()      
  sub_season  SubSeason()  
}

model IceHockeyActionParticipant {
  name = "ice_hockey_action_participants"

  id                         int     @primary @sequence @unique
  ice_hockey_action_play_id  int     
  participant_role           string  
  person_id                  int     
  point_credit               int?    
}

model IceHockeyActionPlay {
  name = "ice_hockey_action_plays"

  id                         int      @primary @sequence @unique
  comment                    string?  
  ice_hockey_event_state_id  int      
  play_result                string?  
  play_type                  string?  
  score_attempt_type         string?  
}

model IceHockeyDefensiveStat {
  name = "ice_hockey_defensive_stats"

  id                          int      @primary @sequence @unique
  goals_against_average       string?  
  goals_empty_net_allowed     string?  
  goals_penalty_shot_allowed  string?  
  goals_power_play_allowed    string?  
  goals_shootout_allowed      string?  
  goals_short_handed_allowed  string?  
  hits                        string?  
  minutes_penalty_killing     string?  
  penalty_killing_amount      string?  
  penalty_killing_percentage  string?  
  save_percentage             string?  
  saves                       string?  
  shots_blocked               string?  
  shots_penalty_shot_allowed  string?  
  shots_power_play_allowed    string?  
  shots_shootout_allowed      string?  
  shutouts                    string?  
  takeaways                   string?  
}

model IceHockeyEventState {
  name = "ice_hockey_event_states"

  id                     int      @primary @sequence @unique
  context                string?  
  current_state          int?     
  event                  Event    
  period_time_elapsed    string?  
  period_time_remaining  string?  
  period_value           string?  
  sequence_number        int?     
}

model IceHockeyOffensiveStat {
  name = "ice_hockey_offensive_stats"

  id                             int      @primary @sequence @unique
  assists                        string?  
  faceoff_losses                 string?  
  faceoff_win_percentage         string?  
  faceoff_wins                   string?  
  giveaways                      string?  
  goals_empty_net                string?  
  goals_even_strength            string?  
  goals_game_tying               string?  
  goals_game_winning             string?  
  goals_overtime                 string?  
  goals_penalty_shot             string?  
  goals_power_play               string?  
  goals_shootout                 string?  
  goals_short_handed             string?  
  minutes_power_play             string?  
  points                         string?  
  power_play_amount              string?  
  power_play_percentage          string?  
  scoring_chances                string?  
  shots_penalty_shot_missed      string?  
  shots_penalty_shot_percentage  string?  
  shots_penalty_shot_taken       string?  
}

model IceHockeyPlayerStat {
  name = "ice_hockey_player_stats"

  id          int      @primary @sequence @unique
  plus_minus  string?  
}

model InjuryPhase {
  name = "injury_phases"

  id               int        @primary @sequence @unique
  disabled_list    string?    
  end_date_time    datetime?  
  injury_comment   string?    
  injury_side      string?    
  injury_status    string?    
  injury_type      string?    
  person           Person     
  phase_type       string?    
  season           Season?    
  start_date_time  datetime?  
}

model KeyAlias {
  name = "key_aliases"

  id        int      @primary @sequence @unique
  key_id    int      
  key_root  KeyRoot  
}

model KeyRoot {
  name = "key_roots"

  id           int         @primary @sequence @unique
  key_aliases  KeyAlias[]  
  key_type     string?     
}

model LatestRevision {
  name = "latest_revisions"

  id               int       @primary @sequence @unique
  latest_document  Document  
  revision_id      string    
}

model Location {
  name = "locations"

  id            int           @primary @sequence @unique
  addresses     Address[]     
  bookmakers    Bookmaker[]?  
  country_code  string?       
  latitude      string?       
  longitude     string?       
  media         Media[]       
  persons       Person[]?     
  persons       Person[]?     
  persons       Person[]?     
  persons       Person[]?     
  sites         Site[]?       
  timezone      string?       
}

model Media {
  name = "media"

  id                    int                  @primary @sequence @unique
  affiliations_media    AffiliationsMedia[]  
  creation_location     Location             
  credit                Person               
  date_time             string?              
  db_loading_date_time  datetime?            
  documents_media       DocumentsMedia[]     
  events_media          EventsMedia[]        
  media_captions        MediaCaption[]       
  media_contents        MediaContent[]       
  media_keywords        MediaKeyword[]       
  media_type            string?              
  object_id             int?                 
  persons_media         PersonsMedia[]       
  publisher             Publisher            
  revision_id           int?                 
  source_id             int?                 
  teams_media           TeamsMedia[]         
}

model MediaCaption {
  name = "media_captions"

  id               int               @primary @sequence @unique
  caption          string?           
  caption_author   Person            
  caption_size     string?           
  caption_type     string?           
  documents_media  DocumentsMedia[]  
  language         string?           
  media            Media             
}

model MediaContent {
  name = "media_contents"

  id          int      @primary @sequence @unique
  duration    string?  
  file_size   string?  
  format      string?  
  height      string?  
  media       Media    
  mime_type   string?  
  object      string?  
  resolution  string?  
  width       string?  
}

model MediaKeyword {
  name = "media_keywords"

  id       int      @primary @sequence @unique
  keyword  string?  
  media    Media    
}

model MotorRacingEventState {
  name = "motor_racing_event_states"

  id               int      @primary @sequence @unique
  context          string?  
  current_state    int?     
  event            Event    
  flag_state       string?  
  lap              string?  
  laps_remaining   string?  
  sequence_number  int?     
  time_elapsed     string?  
}

model MotorRacingQualifyingStat {
  name = "motor_racing_qualifying_stats"

  id                      int      @primary @sequence @unique
  grid                    string?  
  pole_position           string?  
  pole_wins               string?  
  qualifying_position     string?  
  qualifying_speed        string?  
  qualifying_speed_units  string?  
  qualifying_time         string?  
}

model MotorRacingRaceStat {
  name = "motor_racing_race_stats"

  id                   int      @primary @sequence @unique
  bonus                string?  
  distance_completed   string?  
  distance_leading     string?  
  distance_units       string?  
  finishes             string?  
  finishes_top10       string?  
  finishes_top5        string?  
  laps_ahead_follower  string?  
  laps_behind_leader   string?  
  laps_completed       string?  
  laps_leading_total   string?  
  leads_total          string?  
  money                string?  
  money_units          string?  
  non_finishes         string?  
  points               string?  
  points_rookie        string?  
  races_leading        string?  
  speed_average        string?  
  speed_units          string?  
  starts               string?  
  status               string?  
  time                 string?  
  time_ahead_follower  string?  
  time_behind_leader   string?  
  wins                 string?  
}

model OutcomeTotal {
  name = "outcome_totals"

  id                     int               @primary @sequence @unique
  losses                 string?           
  outcome_holder_id      int?              
  outcome_holder_type    string?           
  points_difference      string?           
  points_scored_against  string?           
  points_scored_for      string?           
  rank                   string?           
  standing_points        string?           
  standing_subgroup      StandingSubgroup  
  streak_duration        string?           
  streak_end             datetime?         
  streak_start           datetime?         
  streak_total           string?           
  streak_type            string?           
  ties                   string?           
  undecideds             string?           
  winning_percentage     string?           
  wins                   string?           
}

model ParticipantsEvent {
  name = "participants_events"

  id                int       @primary @sequence @unique
  alignment         string?   
  event             Event     
  event_outcome     string?   
  participant_id    int       
  participant_type  string    
  periods           Period[]  
  rank              int?      
  score             string?   
}

model Period {
  name = "periods"

  id                 int                @primary @sequence @unique
  participant_event  ParticipantsEvent  
  period_value       string?            
  score              string?            
  sub_periods        SubPeriod[]        
}

model Person {
  name = "persons"

  id                                     int                                  @primary @sequence @unique
  american_football_action_participants  AmericanFootballActionParticipant[]  
  baseball_action_substitutions          BaseballActionSubstitution[]?        
  baseball_action_substitutions          BaseballActionSubstitution[]?        
  baseball_defensive_players             BaseballDefensivePlayer[]            
  baseball_event_states                  BaseballEventState[]?                
  baseball_event_states                  BaseballEventState[]?                
  baseball_event_states                  BaseballEventState[]?                
  baseball_event_states                  BaseballEventState[]?                
  baseball_event_states                  BaseballEventState[]?                
  birth_date                             string?                              
  birth_location                         Location?                            
  death_date                             string?                              
  death_location                         Location?                            
  gender                                 string?                              
  hometown_location                      Location?                            
  injury_phases                          InjuryPhase[]                        
  media                                  Media[]                              
  media_captions                         MediaCaption[]                       
  person_event_metadata                  PersonEventMetadatum[]               
  person_key                             string                               
  person_phases                          PersonPhase[]                        
  persons_documents                      PersonsDocument[]                    
  persons_media                          PersonsMedia[]                       
  publisher                              Publisher                            
  residence_location                     Location?                            
}

model PersonEventMetadatum {
  name = "person_event_metadata"

  id                    int        @primary @sequence @unique
  event                 Event      
  health                string?    
  lineup_slot           int?       
  lineup_slot_sequence  int?       
  person                Person     
  position              Position?  
  role                  Role?      
  status                string?    
  team                  Team?      
  weight                string?    
}

model PersonPhase {
  name = "person_phases"

  id                      int        @primary @sequence @unique
  end_date_time           datetime?  
  end_season              Season?    
  entry_reason            string?    
  exit_reason             string?    
  height                  string?    
  membership_id           int        
  membership_type         string     
  person                  Person     
  phase_status            string?    
  regular_position        Position?  
  regular_position_depth  string?    
  role                    Role?      
  role_status             string?    
  selection_level         int?       
  selection_overall       int?       
  selection_sublevel      int?       
  start_date_time         datetime?  
  start_season            Season?    
  uniform_number          string?    
  weight                  string?    
}

model PersonsDocument {
  name = "persons_documents"

  document  Document()  
  person    Person()    
}

model PersonsMedia {
  name = "persons_media"

  media   Media()   
  person  Person()  
}

model Position {
  name = "positions"

  id                             int                            @primary @sequence @unique
  abbreviation                   string                         
  affiliation                    Affiliation                    
  baseball_action_substitutions  BaseballActionSubstitution[]?  
  baseball_action_substitutions  BaseballActionSubstitution[]?  
  baseball_defensive_players     BaseballDefensivePlayer[]      
  core_person_stats              CorePersonStat[]?              
  person_event_metadata          PersonEventMetadatum[]?        
  person_phases                  PersonPhase[]?                 
}

model Publisher {
  name = "publishers"

  id                 int                @primary @sequence @unique
  affiliations       Affiliation[]      
  bookmakers         Bookmaker[]        
  document_fixtures  DocumentFixture[]  
  documents          Document[]         
  documents          Document[]?        
  events             Event[]            
  media              Media[]            
  persons            Person[]           
  publisher_key      string             
  publisher_name     string?            
  seasons            Season[]           
  sites              Site[]             
  standings          Standing[]         
  teams              Team[]             
}

model Role {
  name = "roles"

  id                     int                      @primary @sequence @unique
  comment                string?                  
  person_event_metadata  PersonEventMetadatum[]?  
  person_phases          PersonPhase[]?           
  role_key               string                   
  role_name              string?                  
  team_phases            TeamPhase[]?             
}

model Season {
  name = "seasons"

  id                  int                  @primary @sequence @unique
  affiliation_phases  AffiliationPhase[]?  
  affiliation_phases  AffiliationPhase[]?  
  end_date_time       datetime?            
  injury_phases       InjuryPhase[]?       
  league              Affiliation          
  person_phases       PersonPhase[]?       
  person_phases       PersonPhase[]?       
  publisher           Publisher            
  season_key          int                  
  start_date_time     datetime?            
  sub_seasons         SubSeason[]          
  team_phases         TeamPhase[]?         
  team_phases         TeamPhase[]?         
}

model Site {
  name = "sites"

  id         int        @primary @sequence @unique
  events     Event[]?   
  location   Location?  
  publisher  Publisher  
  site_key   int        
  teams      Team[]?    
}

model SoccerDefensiveStat {
  name = "soccer_defensive_stats"

  id                          int      @primary @sequence @unique
  catches_punches             string?  
  goals_against_average       string?  
  goals_against_total         string?  
  goals_penalty_shot_allowed  string?  
  save_percentage             string?  
  saves                       string?  
  shots_blocked               string?  
  shots_on_goal_total         string?  
  shots_penalty_shot_allowed  string?  
  shots_shootout_allowed      string?  
  shots_shootout_total        string?  
  shutouts                    string?  
}

model SoccerEventState {
  name = "soccer_event_states"

  id                     int      @primary @sequence @unique
  context                string?  
  current_state          int?     
  event                  Event    
  minutes_elapsed        string?  
  period_minute_elapsed  string?  
  period_time_elapsed    string?  
  period_time_remaining  string?  
  period_value           string?  
  sequence_number        int?     
}

model SoccerFoulStat {
  name = "soccer_foul_stats"

  id                      int      @primary @sequence @unique
  caution_points_pending  string?  
  caution_points_total    string?  
  cautions_pending        string?  
  cautions_total          string?  
  ejections_total         string?  
  fouls_commited          string?  
  fouls_suffered          string?  
}

model SoccerOffensiveStat {
  name = "soccer_offensive_stats"

  id                             int      @primary @sequence @unique
  assists_game_tying             string?  
  assists_game_winning           string?  
  assists_overtime               string?  
  assists_total                  string?  
  corner_kicks                   string?  
  giveaways                      string?  
  goals_game_tying               string?  
  goals_game_winning             string?  
  goals_overtime                 string?  
  goals_shootout                 string?  
  goals_total                    string?  
  hat_tricks                     string?  
  offsides                       string?  
  points                         string?  
  shots_hit_frame                string?  
  shots_on_goal_total            string?  
  shots_penalty_shot_missed      string?  
  shots_penalty_shot_percentage  string?  
  shots_penalty_shot_scored      string?  
  shots_penalty_shot_taken       string?  
  shots_shootout_missed          string?  
  shots_shootout_percentage      string?  
  shots_shootout_scored          string?  
  shots_shootout_taken           string?  
  shots_total                    string?  
}

model Standing {
  name = "standings"

  id                    int                 @primary @sequence @unique
  affiliation           Affiliation         
  alignment_scope       string?             
  competition_scope     string?             
  competition_scope_id  string?             
  duration_scope        string?             
  last_updated          string?             
  publisher             Publisher           
  scoping_label         string?             
  site_scope            string?             
  source                string?             
  standing_subgroups    StandingSubgroup[]  
  standing_type         string?             
  sub_season            SubSeason           
}

model StandingSubgroup {
  name = "standing_subgroups"

  id              int             @primary @sequence @unique
  affiliation     Affiliation     
  outcome_totals  OutcomeTotal[]  
  standing        Standing        
}

model Stat {
  name = "stats"

  id                    int      @primary @sequence @unique
  context               string   
  stat_coverage_id      int?     
  stat_coverage_type    string?  
  stat_holder_id        int?     
  stat_holder_type      string?  
  stat_repository_id    int      
  stat_repository_type  string?  
}

model SubPeriod {
  name = "sub_periods"

  id                int      @primary @sequence @unique
  period            Period   
  score             string?  
  sub_period_value  string?  
}

model SubSeason {
  name = "sub_seasons"

  id                  int                @primary @sequence @unique
  end_date_time       datetime?          
  events_sub_seasons  EventsSubSeason[]  
  season              Season             
  standings           Standing[]         
  start_date_time     datetime?          
  sub_season_key      string             
  sub_season_type     string             
}

model Team {
  name = "teams"

  id                              int                            @primary @sequence @unique
  american_football_event_states  AmericanFootballEventState[]?  
  home_site                       Site?                          
  person_event_metadata           PersonEventMetadatum[]?        
  publisher                       Publisher                      
  team_key                        string                         
  team_phases                     TeamPhase[]                    
  teams_documents                 TeamsDocument[]                
  teams_media                     TeamsMedia[]                   
  wagering_moneylines             WageringMoneyline[]            
  wagering_odds_lines             WageringOddsLine[]             
  wagering_runlines               WageringRunline[]              
  wagering_straight_spread_lines  WageringStraightSpreadLine[]   
  wagering_total_score_lines      WageringTotalScoreLine[]       
}

model TeamAmericanFootballStat {
  name = "team_american_football_stats"

  id                         int      @primary @sequence @unique
  average_starting_position  string?  
  time_of_possession         string?  
  timeouts                   string?  
  turnover_ratio             string?  
  yards_per_attempt          string?  
}

model TeamPhase {
  name = "team_phases"

  id               int          @primary @sequence @unique
  affiliation      Affiliation  
  end_date_time    string?      
  end_season       Season?      
  phase_status     string?      
  role             Role?        
  start_date_time  string?      
  start_season     Season?      
  team             Team         
}

model TeamsDocument {
  name = "teams_documents"

  document  Document()  
  team      Team()      
}

model TeamsMedia {
  name = "teams_media"

  media  Media()  
  team   Team()   
}

model TennisActionPoint {
  name = "tennis_action_points"

  id               int      @primary @sequence @unique
  sequence_number  string?  
  sub_period_id    string?  
  win_type         string?  
}

model TennisActionVolley {
  name = "tennis_action_volleys"

  id                       int      @primary @sequence @unique
  landing_location         string?  
  result                   string?  
  sequence_number          string?  
  spin_type                string?  
  swing_type               string?  
  tennis_action_points_id  int?     
  trajectory_details       string?  
}

model TennisEventState {
  name = "tennis_event_states"

  id                  int      @primary @sequence @unique
  context             string?  
  current_state       int?     
  event               Event    
  game                string?  
  receiver_person_id  int?     
  receiver_score      string?  
  sequence_number     int?     
  server_person_id    int?     
  server_score        string?  
  service_number      string?  
  tennis_set          string?  
}

model TennisReturnStat {
  name = "tennis_return_stats"

  id                                    int      @primary @sequence @unique
  break_points_converted                string?  
  break_points_converted_pct            string?  
  break_points_played                   string?  
  first_service_return_points_won       string?  
  first_service_return_points_won_pct   string?  
  matches_played                        string?  
  return_games_played                   string?  
  return_games_won                      string?  
  return_games_won_pct                  string?  
  returns_played                        string?  
  second_service_return_points_won      string?  
  second_service_return_points_won_pct  string?  
}

model TennisServiceStat {
  name = "tennis_service_stats"

  id                             int      @primary @sequence @unique
  aces                           string?  
  break_points_played            string?  
  break_points_saved             string?  
  break_points_saved_pct         string?  
  first_service_points_won       string?  
  first_service_points_won_pct   string?  
  first_services_good            string?  
  first_services_good_pct        string?  
  matches_played                 string?  
  second_service_points_won      string?  
  second_service_points_won_pct  string?  
  service_games_played           string?  
  service_games_won              string?  
  service_games_won_pct          string?  
  services_played                string?  
}

model WageringMoneyline {
  name = "wagering_moneylines"

  id            int        @primary @sequence @unique
  bookmaker     Bookmaker  
  comment       string?    
  date_time     datetime?  
  event         Event      
  line          string?    
  line_opening  string?    
  person_id     int?       
  prediction    string?    
  rotation_key  string?    
  team          Team       
  vigorish      string?    
}

model WageringOddsLine {
  name = "wagering_odds_lines"

  id                  int        @primary @sequence @unique
  bookmaker           Bookmaker  
  comment             string?    
  date_time           datetime?  
  denominator         string?    
  event               Event      
  numerator           string?    
  payout_amount       string?    
  payout_calculation  string?    
  person_id           int?       
  prediction          string?    
  rotation_key        string?    
  team                Team       
}

model WageringRunline {
  name = "wagering_runlines"

  id            int        @primary @sequence @unique
  bookmaker     Bookmaker  
  comment       string?    
  date_time     datetime?  
  event         Event      
  line          string?    
  line_opening  string?    
  line_value    string?    
  person_id     int?       
  prediction    string?    
  rotation_key  string?    
  team          Team       
  vigorish      string?    
}

model WageringStraightSpreadLine {
  name = "wagering_straight_spread_lines"

  id                  int        @primary @sequence @unique
  bookmaker           Bookmaker  
  comment             string?    
  date_time           datetime?  
  event               Event      
  line_value          string?    
  line_value_opening  string?    
  person_id           int?       
  prediction          string?    
  rotation_key        string?    
  team                Team       
  vigorish            string?    
}

model WageringTotalScoreLine {
  name = "wagering_total_score_lines"

  id             int        @primary @sequence @unique
  bookmaker      Bookmaker  
  comment        string?    
  date_time      datetime?  
  event          Event      
  line_over      string?    
  line_under     string?    
  person_id      int?       
  prediction     string?    
  rotation_key   string?    
  team           Team       
  total          string?    
  total_opening  string?    
  vigorish       string?    
}

model WeatherCondition {
  name = "weather_conditions"

  id                 int      @primary @sequence @unique
  clouds             string?  
  event              Event    
  humidity           string?  
  temperature        string?  
  temperature_units  string?  
  weather_code       string?  
  wind_direction     string?  
  wind_velocity      string?  
}
